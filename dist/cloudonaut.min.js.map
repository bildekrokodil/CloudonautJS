{"version":3,"file":"cloudonaut.min.js","sources":["../src/objects/leaderboard.js","../src/objects/geoPoint.js","../src/objects/paging.js","../src/objects/player.js","../src/objects/character.js","../src/objects/authRequest.js","../src/service.js","../src/authService.js","../src/leaderboardService.js","../src/objects/friendRequest.js","../src/friendService.js","../src/cfService.js","../src/objects/characterRequest.js","../src/characterService.js","../src/objects/playerProfileRequest.js","../src/playerProfileService.js","../src/playerService.js","../src/objects/cloudDataRequest.js","../src/cloudDataService.js","../src/api.js","../src/objects/cloudData.js"],"sourcesContent":["class Leaderboard {\n  constructor(obj) {\n    obj = obj || {};\n    this.level = obj.level || 0;\n    this.leaderboardID = obj.leaderboardID || 0;\n    this.startDate = obj.startDate || \"\";\n    this.endDate = obj.endDate || \"\";\n    this.periodicity = obj.periodicity || \"\";\n    this.function = obj.function || \"MAX\";\n    this.sort = obj.sort || \"\";\n  }\n}\n//Requests\nclass ListScoresRequest extends Leaderboard {\n  constructor(appID, appSecret, playerID, characterID, obj, paging) {\n    super(obj);\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"Leaderboard\";\n    this.action = \"List\";\n    this.page = paging.page || 1;\n    this.limit = paging.limit || 0;\n    this.playerID = playerID;\n    this.characterID = characterID;\n  }\n}\nclass CountScoresRequest extends Leaderboard {\n  constructor(appID, appSecret, obj) {\n    super(obj);\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"Leaderboard\";\n    this.action = \"Count\";\n    /*this.playerID = 0;\n    this.characterID = 0;*/\n  }\n}\n\nclass ListScoresOfFriendsRequest extends Leaderboard {\n  constructor(appID, appSecret, player, obj, paging) {\n    super(obj);\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"Leaderboard\";\n    this.action = \"ListFriends\";\n    this.page = paging.page || 1;\n    this.limit = paging.limit || 0;\n    this.playerID = player.playerID;\n    this.playerSecret = player.playerSecret;\n  }\n}\n\nclass CountScoresOfFriendsRequest extends Leaderboard {\n  constructor(appID, appSecret, player, obj) {\n    super(obj);\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"Leaderboard\";\n    this.action = \"CountFriends\";\n    this.playerID = player.playerID;\n    this.playerSecret = player.playerSecret;\n  }\n}\n\nclass AddScoreRequest extends Leaderboard {\n  constructor(appID, appSecret, player, characterID, obj, score) {\n    super(obj);\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"Leaderboard\";\n    this.action = \"Add\";\n    this.playerID = player.playerID;\n    this.playerSecret = player.playerSecret;\n    this.characterID = characterID;\n    this.score = score;\n  }\n}\n\nclass GetScoreRequest extends Leaderboard {\n  constructor(appID, appSecret, playerID, characterID, obj) {\n    super(obj);\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"Leaderboard\";\n    this.action = \"Get\";\n    this.playerID = playerID;\n    this.characterID = characterID;\n  }\n}\n\nexport {\n  Leaderboard,\n  ListScoresRequest,\n  CountScoresRequest,\n  ListScoresOfFriendsRequest,\n  CountScoresOfFriendsRequest,\n  GetScoreRequest,\n  AddScoreRequest,\n};\n","class GeoPoint\n{\n    constructor(obj){\n        obj = obj || {};\n        this.latitude = obj.latitude || obj.lat || \"\";\n        this.longitude = obj.longitude || obj.long || \"\";\n    }\n}\n\nexport { GeoPoint };","class Paging\n{\n    constructor(obj){\n        obj = obj || {};\n        this.limit = obj.limit || 0;\n        this.page = obj.page || 1;\n    }\n}\n\nexport { Paging };","class Player\n{\n    constructor(obj){\n        obj = obj || {};\n        this.providerUID = obj.providerUID || '';\n        this.playerID = obj.playerID || 0;\n        this.playerSecret = obj.playerSecret || '';\n        this.displayName= obj.displayName || '';\n        this.displayNameExtra= obj.displayNameExtra || '';\n        this.avatar='';\n    }\n}\n\nexport { Player };","class Character\n{\n    constructor(obj){\n        obj = obj || {};\n        this.characterID = obj.characterID || 0;\n        this.characterName = obj.characterName || \"\";\n        this.characterNameExtra =  obj.characterNameExtra || \"\";\n        this.characterAvatar = obj.characterAvatar || \"\";\n    }\n}\n\nexport { Character };","class AuthRequestFull\n{\n    constructor(appID, appSecret, obj)\n    {\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Auth\";\n        this.action =\"Authenticate\";\n        this.providerUID = obj.providerUID;\n        this.displayName =obj.displayName;\n        this.displayNameExtra=obj.displayNameExtra;\n    }\n}\n\nclass AnonymousAuthRequestFull extends AuthRequestFull\n{\n    constructor(appID, appSecret, obj){\n        super(appID,appSecret,obj);\n        this.provider = 0;\n    }\n}\n\nclass FacebookAuthRequestFull extends AuthRequestFull\n{\n    constructor(appID, appSecret, obj){\n        super(appID,appSecret,obj);\n        this.provider = 1;\n        this.playerID = obj.playerID;\n        this.playerSecret =obj.playerSecret;\n    }\n}\n\nclass FirebaseAuthRequestFull extends AuthRequestFull\n{\n    constructor(appID, appSecret, obj){\n        super(appID,appSecret,obj);\n        this.provider = 2;\n        this.playerID = obj.playerID;\n        this.playerSecret =obj.playerSecret;\n    }\n}\n\nexport { AnonymousAuthRequestFull, FacebookAuthRequestFull, FirebaseAuthRequestFull };","export default class Service {\n  constructor(api) {\n    this.api = api;\n  }\n\n  ApiCall(obj) {\n    return fetch(this.api.url, {\n      method: \"POST\",\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then(function (response) {\n        if (!response.ok || response.status !== 200) {\n          throw Error(response.statusText);\n        }\n        return response.json();\n      })\n      .catch(function (error) {\n        throw error;\n      });\n  }\n}\n","import {\n  AnonymousAuthRequestFull,\n  FacebookAuthRequestFull,\n  FirebaseAuthRequestFull,\n} from \"./objects/authRequest\";\nimport Service from \"./service\";\n\nexport default class AuthService extends Service {\n  constructor(api) {\n    super(api);\n  }\n\n  Anonymous() {\n    const request = new AnonymousAuthRequestFull(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player\n    );\n    return this.ApiCall(request).then((data) => {\n      if (data.success) {\n        this.api.player.playerID = data.player.playerID;\n        this.api.player.playerSecret = data.player.playerSecret;\n        this.api.player.displayName = data.player.displayName;\n        this.api.player.displayNameExtra = data.player.displayNameExtra;\n      }\n      return data;\n    });\n  }\n\n  WithFacebook(token) {\n    this.api.player.playerSecret = token || this.api.player.playerSecret;\n    const request = new FacebookAuthRequestFull(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player\n    );\n    return this.ApiCall(request).then((data) => {\n      if (data.success) {\n        this.api.player.playerID = data.player.playerID;\n        this.api.player.playerSecret = data.player.playerSecret;\n        this.api.player.displayName = data.player.displayName;\n        this.api.player.displayNameExtra = data.player.displayNameExtra;\n      }\n      return data;\n    });\n  }\n\n  WithFirebase(token) {\n    this.api.player.playerSecret = token || this.api.player.playerSecret;\n    const request = new FirebaseAuthRequestFull(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player\n    );\n    return this.ApiCall(request).then((data) => {\n      if (data.success) {\n        this.api.player.playerID = data.player.playerID;\n        this.api.player.playerSecret = data.player.playerSecret;\n        this.api.player.displayName = data.player.displayName;\n        this.api.player.displayNameExtra = data.player.displayNameExtra;\n      }\n      return data;\n    });\n  }\n}\n","import {\n  Leaderboard,\n  ListScoresRequest,\n  CountScoresRequest,\n  ListScoresOfFriendsRequest,\n  CountScoresOfFriendsRequest,\n  AddScoreRequest,\n  GetScoreRequest,\n} from \"./objects/leaderboard\";\nimport { Paging } from \"./objects/paging\";\nimport Service from \"./service\";\n\nexport default class LeaderboardService extends Service {\n  constructor(api, obj, paging) {\n    super(api);\n    obj = obj || {};\n    paging = paging || {};\n    this.data = new Leaderboard(obj);\n    this.paging = new Paging(paging);\n  }\n\n  ListScores(paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    const request = new ListScoresRequest(\n      this.api.appID,\n      this.api.appSecret,\n      0,\n      0,\n      this.data,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  ListScoresAroundMe(paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    const request = new ListScoresRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID,\n      this.api.character.characterID,\n      this.data,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  ListScoresAroundPlayer(playerID, characterID, paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    playerID = playerID || 0;\n    characterID = characterID || 0;\n    const request = new ListScoresRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID,\n      characterID,\n      this.data,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  CountScores() {\n    const request = new CountScoresRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.data\n    );\n    return this.ApiCall(request);\n  }\n\n  ListScoresOfFriends(paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    const request = new ListScoresOfFriendsRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      this.data,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  CountScoresOfFriends() {\n    const request = new CountScoresOfFriendsRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      this.data\n    );\n    return this.ApiCall(request);\n  }\n\n  GetScore() {\n    const request = new GetScoreRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID,\n      this.api.character.characterID,\n      this.data\n    );\n    return this.ApiCall(request);\n  }\n\n  GetScoreOfPlayer(playerID, characterID) {\n    playerID = playerID || 0;\n    characterID = characterID || 0; \n    const request = new GetScoreRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID,\n      characterID,\n      this.data\n    );\n    return this.ApiCall(request);\n  }\n\n  AddScore(score) {\n    score = parseFloat(score) || null;\n    if (score === null) {\n      return Promise.reject(\"Provide a score\");\n    }\n    const request = new AddScoreRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      this.api.character.characterID,\n      this.data,\n      score\n    );\n    return this.ApiCall(request);\n  }\n}\n","class AddFriendRequest\n{\n    constructor(appID, appSecret, player, friendID){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Friends\";\n        this.action = \"Add\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.friendID = friendID;\n    }\n}\n\nclass AddFriendsFromFacebookRequest\n{\n    constructor(appID, appSecret, player, friendList){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Friends\";\n        this.action = \"AddFromFacebook\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.friendList = friendList;\n    }\n}\n\nclass RemoveFriendRequest\n{\n    constructor(appID, appSecret, player, friendID){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Friends\";\n        this.action = \"Remove\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.friendID = friendID;\n    }\n}\n\nclass ListFriendsRequest\n{\n    constructor(appID, appSecret, player, paging){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Friends\";\n        this.action = \"List\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.page = paging.page || 1;\n        this.limit = paging.limit || 0;\n    }\n}\n\nclass CountFriendsRequest {\n    constructor(appID, appSecret, player) {\n      this.appID = appID;\n      this.appSecret = appSecret;\n      this.controller = \"Friends\";\n      this.action = \"Count\";\n      this.playerID = player.playerID;\n      this.playerSecret = player.playerSecret;\n    }\n  }\nexport { AddFriendRequest, AddFriendsFromFacebookRequest, RemoveFriendRequest, ListFriendsRequest, CountFriendsRequest };","import {\n  AddFriendRequest,\n  RemoveFriendRequest,\n  AddFriendsFromFacebookRequest,\n  ListFriendsRequest,\n  CountFriendsRequest,\n} from \"./objects/friendRequest\";\n\nimport { Paging } from \"./objects/paging\";\nimport Service from \"./service\";\n\nexport default class FriendService  extends Service{\n  constructor(api, paging) {\n    paging = paging || {};\n    super(api);\n    this.paging = new Paging(paging);\n  }\n\n  AddFriend(friendID) {\n    friendID = parseInt(friendID) || null;\n    if (friendID === null) {\n      return Promise.reject(\"Provide a friendID\");\n    }\n    const request = new AddFriendRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      friendID\n    );\n    return this.ApiCall(request);\n  }\n\n  RemoveFriend(friendID) {\n    friendID = parseInt(friendID) || null;\n    if (friendID === null) {\n      return Promise.reject(\"Provide a friendID\");\n    }\n    const request = new RemoveFriendRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      friendID\n    );\n    return this.ApiCall(request);\n  }\n\n  AddFriendsFromFacebook(friendList) {\n    if (Array.isArray(friendList)) {\n      const request = new AddFriendsFromFacebookRequest(\n        this.api.appID,\n        this.api.appSecret,\n        this.api.player,\n        friendList\n      );\n      return this.ApiCall(request);\n    } else {\n      return Promise.reject(\"friendList must be of type array!\");\n    }\n  }\n\n  ListFriends(paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    const request = new ListFriendsRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  Count() {\n    const request = new CountFriendsRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player\n    );\n    return this.ApiCall(request);\n  }\n  \n}","import { GeoPoint } from \"./objects/geoPoint\";\nimport Service from \"./service\";\n\nexport default class CFService extends Service {\n  constructor(api) {\n    super(api);\n  }\n\n  GetDistance(geoPoint1, geoPoint2, unit) {\n    unit = unit || \"\";\n    if (geoPoint1 instanceof GeoPoint && geoPoint2 instanceof GeoPoint) {\n      const request = {\n        appID: this.api.appID,\n        appSecret: this.api.appSecret,\n        controller: \"CF\",\n        action: \"GetDistance\",\n        latitude1: geoPoint1.latitude,\n        latitude2: geoPoint2.latitude,\n        longitude1: geoPoint1.longitude,\n        longitude2: geoPoint2.longitude,\n        unit: unit,\n      };\n      return this.ApiCall(request);\n    } else {\n      return Promise.reject(\"Failed api call\");\n    }\n  }\n\n  GetRandomString() {\n    const request = {\n      appID: this.api.appID,\n      appSecret: this.api.appSecret,\n      controller: \"CF\",\n      action: \"GetRandomString\",\n    };\n    return this.ApiCall(request);\n  }\n\n  GetGUID() {\n    const request = {\n      appID: this.api.appID,\n      appSecret: this.api.appSecret,\n      controller: \"CF\",\n      action: \"GetGUID\",\n    };\n    return this.ApiCall(request);\n  }\n}\n","class AddCharacterRequest\n{\n    constructor(appID, appSecret, player, character){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Character\";\n        this.action =\"Add\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.characterName = character.characterName;\n        this.characterNameExtra =  character.characterNameExtra;\n        this.characterAvatar = character.characterAvatar;\n    }\n}\n\nclass UpdateCharacterRequest\n{\n    constructor(appID, appSecret, player, character){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Character\";\n        this.action =\"Update\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.characterID = character.characterID;\n        this.characterName = character.characterName;\n        this.characterNameExtra =  character.characterNameExtra;\n        this.characterAvatar = character.characterAvatar;\n    }\n}\n\nclass GetCharacterRequest\n{\n    constructor(appID, appSecret, playerID, characterID){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Character\";\n        this.action =\"Get\";\n        this.playerID = playerID;\n        this.characterID = characterID;\n    }\n}\n\nclass ListCharactersRequest\n{\n    constructor(appID, appSecret, playerID, paging){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"Character\";\n        this.action =\"List\";\n        this.playerID = playerID;\n        this.page = paging.page;\n        this.limit = paging.limit;\n    }\n}\n\nclass CountCharactersRequest {\n    constructor(appID, appSecret, playerID) {\n      this.appID = appID;\n      this.appSecret = appSecret;\n      this.controller = \"Character\";\n      this.action = \"Count\";\n      this.playerID = playerID;\n    }\n  }\n\nexport {\n    AddCharacterRequest,\n    UpdateCharacterRequest,\n    GetCharacterRequest,\n    ListCharactersRequest,\n    CountCharactersRequest,\n  };","import { Paging } from \"./objects/paging\";\nimport {\n  AddCharacterRequest,\n  UpdateCharacterRequest,\n  GetCharacterRequest,\n  ListCharactersRequest,\n  CountCharactersRequest,\n} from \"./objects/characterRequest\";\nimport { Character } from \"./objects/character\";\nimport Service from \"./service\";\nexport default class CharacterService extends Service {\n  constructor(api, paging) {\n    super(api);\n    paging = paging || {};\n    this.paging = new Paging(paging);\n  }\n\n  AddCharacter(character) {\n    character = character || {};\n    if (!(character instanceof Character)) {\n      return Promise.reject(\"Provide a character\");\n    }\n    if (character.characterID != 0) {\n      return Promise.reject(\"Provide a new character. CharacterID must be 0\");\n    }\n    const request = new AddCharacterRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      character\n    );\n    return this.ApiCall(request);\n  }\n\n  UpdateCharacter(character) {\n    character = character || {};\n    if (!(character instanceof Character)) {\n      character = this.api.character;\n    }\n    const request = new UpdateCharacterRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      character\n    );\n    return this.ApiCall(request);\n  }\n\n  GetCharacter(characterID) {\n    characterID = characterID || this.api.character.characterID;\n    const request = new GetCharacterRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID,\n      characterID\n    );\n    return this.ApiCall(request);\n  }\n\n  SetCharacter(characterID) {\n    characterID = characterID || 0;\n    if (characterID == 0)\n    {\n      this.api.character.characterID = 0;\n      this.api.character.characterName = \"\";\n      this.api.character.characterNameExtra = \"\";\n      this.api.character.characterAvatar = \"\";\n      const obj = {\"success\":true};\n      return Promise.resolve(obj);\n    } \n    const request = new GetCharacterRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID,\n      characterID\n    );\n    return this.ApiCall(request).then((data) => {\n      if (data.success) {\n        this.api.character.characterID = data.character.characterID;\n        this.api.character.characterName = data.character.characterName;\n        this.api.character.characterNameExtra = data.character.characterNameExtra;\n        this.api.character.characterAvatar = data.character.characterAvatar;\n      }\n      return data;\n    });\n  }\n\n  GetCharacterOfPlayer(playerID, characterID) {\n    playerID = playerID || this.api.player.playerID;\n    characterID = characterID || this.api.character.characterID;\n    const request = new GetCharacterRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID,\n      characterID\n    );\n    return this.ApiCall(request);\n  }\n\n  ListCharacters(paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    const request = new ListCharactersRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  CountCharacters() {\n    const request = new CountCharactersRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID\n    );\n    return this.ApiCall(request);\n  }\n  \n  ListCharactersOfPlayer(playerID, paging) {\n    playerID = playerID || this.api.player.playerID;\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    const request = new ListCharactersRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n\n  CountCharactersOfPlayer(playerID) {\n    playerID = playerID || this.api.player.playerID;\n    const request = new CountCharactersRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID\n    );\n    return this.ApiCall(request);\n  }\n}\n","class UpdatePlayerProfileRequest\n{\n    constructor(appID, appSecret, player){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"PlayerProfile\";\n        this.action =\"Update\";\n        this.playerID = player.playerID;\n        this.playerSecret = player.playerSecret;\n        this.displayName = player.displayName;\n        this.displayNameExtra =  player.displayNameExtra;\n        this.avatar = player.avatar;\n    }\n}\n\nclass GetPlayerProfileRequest\n{\n    constructor(appID, appSecret, playerID){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"PlayerProfile\";\n        this.action =\"Get\";\n        this.playerID = playerID;\n    }\n}\n\nclass ListPlayerProfilesOfPlayersRequest\n{\n    constructor(appID, appSecret, playerList, paging){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"PlayerProfile\";\n        this.action =\"List\";\n        this.playerList = playerList;\n        this.page = paging.page || 1;\n        this.limit = paging.limit || 0;\n    }\n}\n\nclass SearchPlayerProfileRequest\n{\n    constructor(appID, appSecret, search, paging){\n        this.appID = appID;\n        this.appSecret = appSecret;\n        this.controller = \"PlayerProfile\";\n        this.action = \"Search\";\n        this.search = search;\n        this.page = paging.page || 1;\n        this.limit = paging.limit || 0;\n    }\n}\n\nexport {\n    UpdatePlayerProfileRequest,\n    GetPlayerProfileRequest,\n    ListPlayerProfilesOfPlayersRequest,\n    SearchPlayerProfileRequest,\n  };","import {\n  UpdatePlayerProfileRequest,\n  GetPlayerProfileRequest,\n  ListPlayerProfilesOfPlayersRequest,\n  SearchPlayerProfileRequest,\n} from \"./objects/playerProfileRequest\";\nimport { Paging } from \"./objects/paging\";\nimport Service from \"./service\";\n\nexport default class PlayerProfileService extends Service {\n  constructor(api, paging) {\n    paging = paging || {};\n    super(api);\n    this.paging = new Paging(paging);\n  }\n\n  UpdateProfile() {\n    const request = new UpdatePlayerProfileRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player\n    );\n    return this.ApiCall(request);\n  }\n\n  GetProfile() {\n    const request = new GetPlayerProfileRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player.playerID\n    );\n    return this.ApiCall(request);\n  }\n\n  GetProfileOfPlayer(playerID) {\n    playerID = playerID || this.api.player.playerID;\n    const request = new GetPlayerProfileRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID\n    );\n    return this.ApiCall(request);\n  }\n\n  ListProfilesOfPlayers(playerList, paging) {\n    if (Array.isArray(playerList)) {\n      paging = paging || {};\n      paging = paging instanceof Paging ? paging : this.paging;\n      const request = new ListPlayerProfilesOfPlayersRequest(\n        this.api.appID,\n        this.api.appSecret,\n        playerList,\n        paging\n      );\n      return this.ApiCall(request);\n    } else {\n      return Promise.reject(\"playerList must be of type array!\");\n    }\n  }\n\n  Search(search, paging) {\n    paging = paging || {};\n    paging = paging instanceof Paging ? paging : this.paging;\n    search = search || \"\";\n    const request = new SearchPlayerProfileRequest(\n      this.api.appID,\n      this.api.appSecret,\n      search,\n      paging\n    );\n    return this.ApiCall(request);\n  }\n}\n","import Service from \"./service\";\n\nexport default class PlayerService extends Service {\n    constructor(api) {\n        super(api);\n    }\n\n    GetName()\n    {\n        return (this.api.character.characterID==0 || this.api.character.characterName=='') ? this.api.player.displayName : this.api.character.characterName;\n    }\n  \n    GetNameExtra()\n    {\n        return (this.api.character.characterID==0 || this.api.character.characterNameExtra=='') ? this.api.player.displayNameExtra : this.api.character.characterNameExtra;\n    }\n  \n    GetAvatar()\n    {\n        return (this.api.character.characterID==0 || this.api.character.characterAvatar=='') ? this.api.player.avatar : this.api.character.characterAvatar;\n    }\n}","class SetAppDataRequest {\n  constructor(appID, appSecret, dataKey, value, writeLock) {\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"CloudData\";\n    this.action = \"SetAppData\";\n    this.dataKey = dataKey;\n    this.value = value;\n    this.writeLock = writeLock;\n    this.privacy = 0;\n  }\n}\n\nclass GetAppDataRequest {\n  constructor(appID, appSecret, dataKey) {\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.controller = \"CloudData\";\n    this.action = \"GetAppData\";\n    this.dataKey = dataKey;\n  }\n}\n\nclass SetPlayerDataRequest {\n    constructor(appID, appSecret, player, characterID, dataKey, value, writeLock, privacy) {\n      this.appID = appID;\n      this.appSecret = appSecret;\n      this.controller = \"CloudData\";\n      this.action = \"SetPlayerData\";\n      this.playerID = player.playerID;\n      this.playerSecret = player.playerSecret;\n      this.characterID = characterID;\n      this.dataKey = dataKey;\n      this.value = value;\n      this.writeLock = writeLock;\n      this.privacy = privacy;\n    }\n  }\n\n  class GetPlayerDataRequest {\n    constructor(appID, appSecret, player, characterID, dataKey) {\n      this.appID = appID;\n      this.appSecret = appSecret;\n      this.controller = \"CloudData\";\n      this.action = \"GetPlayerData\";\n      this.playerID = player.playerID;\n      this.playerSecret = player.playerSecret;\n      this.characterID = characterID;\n      this.dataKey = dataKey;\n    }\n  }\n\n  class GetPlayerDataByIDRequest {\n    constructor(appID, appSecret, playerID, characterID, dataKey) {\n      this.appID = appID;\n      this.appSecret = appSecret;\n      this.controller = \"CloudData\";\n      this.action = \"GetPlayerDataByID\";\n      this.playerID = playerID;\n      this.characterID = characterID;\n      this.dataKey = dataKey;\n    }\n  }\n\nexport { SetAppDataRequest, GetAppDataRequest, SetPlayerDataRequest, GetPlayerDataRequest, GetPlayerDataByIDRequest };\n","import {\n  GetAppDataRequest,\n  GetPlayerDataRequest,\n  SetAppDataRequest,\n  SetPlayerDataRequest,\n  GetPlayerDataByIDRequest,\n} from \"./objects/cloudDataRequest\";\nimport Service from \"./service\";\n\nexport default class CloudDataService extends Service {\n  constructor(api) {\n    super(api);\n  }\n\n  SetAppData(dataKey, value, writeLock) {\n    dataKey = dataKey || \"\";\n    value = value || \"\";\n    writeLock = writeLock || 0;\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new SetAppDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      dataKey,\n      value,\n      writeLock\n    );\n    return this.ApiCall(request);\n  }\n\n  GetAppData(dataKey) {\n    dataKey = dataKey || \"\";\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new GetAppDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      dataKey\n    );\n    return this.ApiCall(request);\n  }\n\n  //Current logged in player and selected character\n  SetData(dataKey, value, writeLock, privacy) {\n    dataKey = dataKey || \"\";\n    value = value || \"\";\n    writeLock = writeLock || 0;\n    privacy = privacy || -1;\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new SetPlayerDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      this.api.character.characterID,\n      dataKey,\n      value,\n      writeLock,\n      privacy\n    );\n    return this.ApiCall(request);\n  }\n\n  //Current logged in payer and specified character\n  SetCharacterData(dataKey, characterID, value, writeLock, privacy) {\n    characterID = characterID || 0;\n    dataKey = dataKey || \"\";\n    value = value || \"\";\n    writeLock = writeLock || 0;\n    privacy = privacy || -1;\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new SetPlayerDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      characterID,\n      dataKey,\n      value,\n      writeLock,\n      privacy\n    );\n    return this.ApiCall(request);\n  }\n\n  //Current logged in player and character = 0 same as SetCharacterData(0)\n  SetPlayerData(dataKey, value, writeLock, privacy) {\n    dataKey = dataKey || \"\";\n    value = value || \"\";\n    writeLock = writeLock || 0;\n    privacy = privacy || -1;\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new SetPlayerDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      0,\n      dataKey,\n      value,\n      writeLock,\n      privacy\n    );\n    return this.ApiCall(request);\n  }\n\n  //Current logged in player and selected character\n  GetData(dataKey) {\n    dataKey = dataKey || \"\";\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new GetPlayerDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      this.api.character.characterID,\n      dataKey\n    );\n    return this.ApiCall(request);\n  }\n\n  //Current logged in player and specified character\n  GetCharacterData(dataKey, characterID) {\n    characterID = characterID || 0;\n    dataKey = dataKey || \"\";\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new GetPlayerDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      characterID,\n      dataKey\n    );\n    return this.ApiCall(request);\n  }\n\n  //Current logged in player and character = 0 same as GetCharacterData(0)\n  GetPlayerData(dataKey) {\n    dataKey = dataKey || \"\";\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new GetPlayerDataRequest(\n      this.api.appID,\n      this.api.appSecret,\n      this.api.player,\n      0,\n      dataKey\n    );\n    return this.ApiCall(request);\n  }\n\n  //Specified Player\n  GetCharacterDataOfPlayer(dataKey, playerID, characterID) {\n    playerID = playerID || 0;\n    characterID = characterID || 0;\n    dataKey = dataKey || \"\";\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new GetPlayerDataByIDRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID,\n      characterID,\n      dataKey\n    );\n    return this.ApiCall(request);\n  }\n  GetPlayerDataOfPlayer(dataKey, playerID) {\n    playerID = playerID || 0;\n    dataKey = dataKey || \"\";\n    if (dataKey === \"\") {\n      return Promise.reject(\"Provide a key\");\n    }\n    const request = new GetPlayerDataByIDRequest(\n      this.api.appID,\n      this.api.appSecret,\n      playerID,\n      0,\n      dataKey\n    );\n    return this.ApiCall(request);\n  }\n}\n","import AuthService from \"./authService.js\";\nimport LeaderboardService from \"./leaderboardService.js\";\nimport FriendService from './friendService.js';\nimport CFService from \"./cfService.js\";\nimport CharacterService from \"./characterService.js\";\nimport PlayerProfileService from \"./playerProfileService.js\";\nimport PlayerService from \"./playerService.js\";\nimport { Character } from \"./objects/character.js\";\nimport { Player } from \"./objects/player.js\";\nimport CloudDataService from \"./cloudDataService.js\";\n\nexport default class API {\n  constructor(appID, appSecret = \"\") {\n    this.appID = appID;\n    this.appSecret = appSecret;\n    this.player = new Player();\n    this.character = new Character();\n    this.url = \"https://api01.cloudonaut.com/index.php\";\n  }\n\n  Auth()\n  {\n    return new AuthService(this);\n  }\n\n  CF()\n  {\n    return new CFService(this);\n  }\n\n  Friend()\n  {\n    return new FriendService(this);\n  }\n\n  Leaderboard(obj, paging)\n  {\n    return new LeaderboardService(this, obj, paging);\n  }\n\n  Character(paging)\n  {\n    return new CharacterService(this, paging);\n  }\n\n  PlayerProfile()\n  {\n    return new PlayerProfileService(this);\n  }\n\n  Player()\n  {\n    return new PlayerService(this);\n  }\n\n  CloudData()\n  {\n    return new CloudDataService(this);\n  }\n}\n//export a direct instance\n//export const api = new API();\n","class CloudData\n{\n    constructor(obj){\n        obj = obj || {};\n        this.dataKey = obj.dataKey || '';\n        this.value = obj.value || 0;\n        this.privacy = obj.privacy || 1;\n        this.writeLock= obj.writeLock || 0;\n    }\n}\n\nexport { CloudData };"],"names":["Leaderboard","obj","level","leaderboardID","startDate","endDate","periodicity","sort","ListScoresRequest","appID","appSecret","playerID","characterID","paging","controller","action","page","limit","CountScoresRequest","ListScoresOfFriendsRequest","player","playerSecret","CountScoresOfFriendsRequest","AddScoreRequest","score","GetScoreRequest","GeoPoint","latitude","lat","longitude","Paging","Player","providerUID","displayName","displayNameExtra","avatar","Character","characterName","characterNameExtra","characterAvatar","AuthRequestFull","AnonymousAuthRequestFull","provider","FacebookAuthRequestFull","FirebaseAuthRequestFull","Service","api","fetch","this","url","method","body","JSON","stringify","headers","then","response","ok","status","Error","statusText","json","error","AuthService","request","ApiCall","data","success","_this","token","_this2","_this3","LeaderboardService","character","parseFloat","Promise","reject","AddFriendRequest","friendID","AddFriendsFromFacebookRequest","friendList","RemoveFriendRequest","ListFriendsRequest","CountFriendsRequest","FriendService","parseInt","Array","isArray","CFService","geoPoint1","geoPoint2","unit","latitude1","latitude2","longitude1","longitude2","AddCharacterRequest","UpdateCharacterRequest","GetCharacterRequest","ListCharactersRequest","CountCharactersRequest","CharacterService","resolve","UpdatePlayerProfileRequest","GetPlayerProfileRequest","ListPlayerProfilesOfPlayersRequest","playerList","SearchPlayerProfileRequest","search","PlayerProfileService","PlayerService","SetAppDataRequest","dataKey","value","writeLock","privacy","GetAppDataRequest","SetPlayerDataRequest","GetPlayerDataRequest","GetPlayerDataByIDRequest","CloudDataService","API"],"mappings":"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"}